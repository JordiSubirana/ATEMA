/*
	Copyright 2022 Jordi SUBIRANA

	Permission is hereby granted, free of charge, to any person obtaining a copy of
	this software and associated documentation files (the "Software"), to deal in
	the Software without restriction, including without limitation the rights to use,
	copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the
	Software, and to permit persons to whom the Software is furnished to do so, subject
	to the following conditions:

	The above copyright notice and this permission notice shall be included in all
	copies or substantial portions of the Software.

	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
	INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
	PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
	HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
	CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
	OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/

#ifndef ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION
#define ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkat_func)
#endif

#ifndef ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_CORE_VERSION_BEGIN
#define ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_CORE_VERSION_BEGIN(at_ver)
#endif

#ifndef ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_CORE_VERSION_END
#define ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_CORE_VERSION_END
#endif

#ifndef ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_BEGIN
#define ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_BEGIN(at_ext)
#endif

#ifndef ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_END
#define ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_END
#endif

// ---- Core 1_0 commands
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_CORE_VERSION_BEGIN(VK_VERSION_1_0)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkDestroyInstance)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetDeviceProcAddr)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkEnumeratePhysicalDevices)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceFeatures)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceFormatProperties)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceImageFormatProperties)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceProperties)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceQueueFamilyProperties)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceMemoryProperties)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkCreateDevice)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkEnumerateDeviceExtensionProperties)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkEnumerateDeviceLayerProperties)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceSparseImageFormatProperties)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_CORE_VERSION_END

// ---- Core 1_1 commands
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_CORE_VERSION_BEGIN(VK_VERSION_1_1)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkEnumeratePhysicalDeviceGroups)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceFeatures2)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceProperties2)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceFormatProperties2)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceImageFormatProperties2)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceQueueFamilyProperties2)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceMemoryProperties2)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceSparseImageFormatProperties2)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceExternalBufferProperties)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceExternalFenceProperties)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceExternalSemaphoreProperties)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_CORE_VERSION_END

// ---- Core 1_3 commands
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_CORE_VERSION_BEGIN(VK_VERSION_1_3)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceToolProperties)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_CORE_VERSION_END

// ---- VK_KHR_surface extension commands
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_BEGIN(VK_KHR_surface)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkDestroySurfaceKHR)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceSurfaceSupportKHR)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceSurfaceCapabilitiesKHR)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceSurfaceFormatsKHR)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceSurfacePresentModesKHR)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_END

// ---- VK_KHR_swapchain extension commands
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_BEGIN(VK_KHR_swapchain)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDevicePresentRectanglesKHR)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_END

// ---- VK_KHR_display extension commands
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_BEGIN(VK_KHR_display)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceDisplayPropertiesKHR)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceDisplayPlanePropertiesKHR)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetDisplayPlaneSupportedDisplaysKHR)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetDisplayModePropertiesKHR)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkCreateDisplayModeKHR)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetDisplayPlaneCapabilitiesKHR)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkCreateDisplayPlaneSurfaceKHR)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_END

// ---- VK_KHR_xlib_surface extension commands
#ifdef VK_USE_PLATFORM_XLIB_KHR
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_BEGIN(VK_KHR_xlib_surface)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkCreateXlibSurfaceKHR)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceXlibPresentationSupportKHR)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_END
#endif // VK_USE_PLATFORM_XLIB_KHR

// ---- VK_KHR_xcb_surface extension commands
#ifdef VK_USE_PLATFORM_XCB_KHR
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_BEGIN(VK_KHR_xcb_surface)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkCreateXcbSurfaceKHR)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceXcbPresentationSupportKHR)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_END
#endif // VK_USE_PLATFORM_XCB_KHR

// ---- VK_KHR_wayland_surface extension commands
#ifdef VK_USE_PLATFORM_WAYLAND_KHR
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_BEGIN(VK_KHR_wayland_surface)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkCreateWaylandSurfaceKHR)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceWaylandPresentationSupportKHR)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_END
#endif // VK_USE_PLATFORM_WAYLAND_KHR

// ---- VK_KHR_android_surface extension commands
#ifdef VK_USE_PLATFORM_ANDROID_KHR
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_BEGIN(VK_KHR_android_surface)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkCreateAndroidSurfaceKHR)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_END
#endif // VK_USE_PLATFORM_ANDROID_KHR

// ---- VK_KHR_win32_surface extension commands
#ifdef VK_USE_PLATFORM_WIN32_KHR
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_BEGIN(VK_KHR_win32_surface)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkCreateWin32SurfaceKHR)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceWin32PresentationSupportKHR)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_END
#endif // VK_USE_PLATFORM_WIN32_KHR

// ---- VK_KHR_video_queue extension commands
#ifdef VK_ENABLE_BETA_EXTENSIONS
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_BEGIN(VK_KHR_video_queue)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceVideoCapabilitiesKHR)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceVideoFormatPropertiesKHR)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_END
#endif // VK_ENABLE_BETA_EXTENSIONS

// ---- VK_KHR_get_physical_device_properties2 extension commands
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_BEGIN(VK_KHR_get_physical_device_properties2)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceFeatures2KHR)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceProperties2KHR)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceFormatProperties2KHR)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceImageFormatProperties2KHR)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceQueueFamilyProperties2KHR)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceMemoryProperties2KHR)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceSparseImageFormatProperties2KHR)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_END

// ---- VK_KHR_device_group_creation extension commands
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_BEGIN(VK_KHR_device_group_creation)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkEnumeratePhysicalDeviceGroupsKHR)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_END

// ---- VK_KHR_external_memory_capabilities extension commands
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_BEGIN(VK_KHR_external_memory_capabilities)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceExternalBufferPropertiesKHR)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_END

// ---- VK_KHR_external_semaphore_capabilities extension commands
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_BEGIN(VK_KHR_external_semaphore_capabilities)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceExternalSemaphorePropertiesKHR)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_END

// ---- VK_KHR_external_fence_capabilities extension commands
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_BEGIN(VK_KHR_external_fence_capabilities)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceExternalFencePropertiesKHR)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_END

// ---- VK_KHR_performance_query extension commands
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_BEGIN(VK_KHR_performance_query)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_END

// ---- VK_KHR_get_surface_capabilities2 extension commands
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_BEGIN(VK_KHR_get_surface_capabilities2)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceSurfaceCapabilities2KHR)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceSurfaceFormats2KHR)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_END

// ---- VK_KHR_get_display_properties2 extension commands
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_BEGIN(VK_KHR_get_display_properties2)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceDisplayProperties2KHR)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceDisplayPlaneProperties2KHR)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetDisplayModeProperties2KHR)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetDisplayPlaneCapabilities2KHR)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_END

// ---- VK_KHR_fragment_shading_rate extension commands
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_BEGIN(VK_KHR_fragment_shading_rate)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceFragmentShadingRatesKHR)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_END

// ---- VK_EXT_debug_report extension commands
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_BEGIN(VK_EXT_debug_report)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkCreateDebugReportCallbackEXT)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkDestroyDebugReportCallbackEXT)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkDebugReportMessageEXT)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_END

// ---- VK_GGP_stream_descriptor_surface extension commands
#ifdef VK_USE_PLATFORM_GGP
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_BEGIN(VK_GGP_stream_descriptor_surface)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkCreateStreamDescriptorSurfaceGGP)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_END
#endif // VK_USE_PLATFORM_GGP

// ---- VK_NV_external_memory_capabilities extension commands
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_BEGIN(VK_NV_external_memory_capabilities)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceExternalImageFormatPropertiesNV)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_END

// ---- VK_NN_vi_surface extension commands
#ifdef VK_USE_PLATFORM_VI_NN
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_BEGIN(VK_NN_vi_surface)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkCreateViSurfaceNN)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_END
#endif // VK_USE_PLATFORM_VI_NN

// ---- VK_EXT_direct_mode_display extension commands
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_BEGIN(VK_EXT_direct_mode_display)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkReleaseDisplayEXT)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_END

// ---- VK_EXT_acquire_xlib_display extension commands
#ifdef VK_USE_PLATFORM_XLIB_XRANDR_EXT
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_BEGIN(VK_EXT_acquire_xlib_display)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkAcquireXlibDisplayEXT)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetRandROutputDisplayEXT)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_END
#endif // VK_USE_PLATFORM_XLIB_XRANDR_EXT

// ---- VK_EXT_display_surface_counter extension commands
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_BEGIN(VK_EXT_display_surface_counter)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceSurfaceCapabilities2EXT)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_END

// ---- VK_MVK_ios_surface extension commands
#ifdef VK_USE_PLATFORM_IOS_MVK
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_BEGIN(VK_MVK_ios_surface)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkCreateIOSSurfaceMVK)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_END
#endif // VK_USE_PLATFORM_IOS_MVK

// ---- VK_MVK_macos_surface extension commands
#ifdef VK_USE_PLATFORM_MACOS_MVK
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_BEGIN(VK_MVK_macos_surface)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkCreateMacOSSurfaceMVK)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_END
#endif // VK_USE_PLATFORM_MACOS_MVK

// ---- VK_EXT_debug_utils extension commands
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_BEGIN(VK_EXT_debug_utils)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkCreateDebugUtilsMessengerEXT)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkDestroyDebugUtilsMessengerEXT)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkSubmitDebugUtilsMessageEXT)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_END

// ---- VK_EXT_sample_locations extension commands
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_BEGIN(VK_EXT_sample_locations)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceMultisamplePropertiesEXT)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_END

// ---- VK_EXT_calibrated_timestamps extension commands
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_BEGIN(VK_EXT_calibrated_timestamps)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceCalibrateableTimeDomainsEXT)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_END

// ---- VK_FUCHSIA_imagepipe_surface extension commands
#ifdef VK_USE_PLATFORM_FUCHSIA
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_BEGIN(VK_FUCHSIA_imagepipe_surface)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkCreateImagePipeSurfaceFUCHSIA)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_END
#endif // VK_USE_PLATFORM_FUCHSIA

// ---- VK_EXT_metal_surface extension commands
#ifdef VK_USE_PLATFORM_METAL_EXT
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_BEGIN(VK_EXT_metal_surface)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkCreateMetalSurfaceEXT)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_END
#endif // VK_USE_PLATFORM_METAL_EXT

// ---- VK_EXT_tooling_info extension commands
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_BEGIN(VK_EXT_tooling_info)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceToolPropertiesEXT)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_END

// ---- VK_NV_cooperative_matrix extension commands
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_BEGIN(VK_NV_cooperative_matrix)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceCooperativeMatrixPropertiesNV)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_END

// ---- VK_NV_coverage_reduction_mode extension commands
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_BEGIN(VK_NV_coverage_reduction_mode)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_END

// ---- VK_EXT_full_screen_exclusive extension commands
#ifdef VK_USE_PLATFORM_WIN32_KHR
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_BEGIN(VK_EXT_full_screen_exclusive)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceSurfacePresentModes2EXT)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_END
#endif // VK_USE_PLATFORM_WIN32_KHR

// ---- VK_EXT_headless_surface extension commands
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_BEGIN(VK_EXT_headless_surface)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkCreateHeadlessSurfaceEXT)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_END

// ---- VK_EXT_acquire_drm_display extension commands
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_BEGIN(VK_EXT_acquire_drm_display)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkAcquireDrmDisplayEXT)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetDrmDisplayEXT)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_END

// ---- VK_NV_acquire_winrt_display extension commands
#ifdef VK_USE_PLATFORM_WIN32_KHR
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_BEGIN(VK_NV_acquire_winrt_display)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkAcquireWinrtDisplayNV)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetWinrtDisplayNV)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_END
#endif // VK_USE_PLATFORM_WIN32_KHR

// ---- VK_EXT_directfb_surface extension commands
#ifdef VK_USE_PLATFORM_DIRECTFB_EXT
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_BEGIN(VK_EXT_directfb_surface)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkCreateDirectFBSurfaceEXT)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceDirectFBPresentationSupportEXT)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_END
#endif // VK_USE_PLATFORM_DIRECTFB_EXT

// ---- VK_QNX_screen_surface extension commands
#ifdef VK_USE_PLATFORM_SCREEN_QNX
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_BEGIN(VK_QNX_screen_surface)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkCreateScreenSurfaceQNX)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION(vkGetPhysicalDeviceScreenPresentationSupportQNX)
ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_END
#endif // VK_USE_PLATFORM_SCREEN_QNX

#undef ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION
#undef ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_CORE_VERSION_BEGIN
#undef ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_CORE_VERSION_END
#undef ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_BEGIN
#undef ATEMA_MACROLIST_VULKAN_INSTANCE_FUNCTION_EXTENSION_END